#!/usr/bin/env bash
#
# Gaia Sky start script
#

# Get script path
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  GSDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$GSDIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
GSDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
# Escape spaces in GSDIR
GSDIRESC=$(printf %q "$GSDIR")

LIB_PATH="$GSDIR/lib/*"

#
# Choose jre
#
if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS, use bundled JRE
    JAVA="$GSDIR/../../PlugIns/jre.bundle/Contents/Home/jre/bin/java"
elif [[ "$JAVA_HOME" != "" ]]; then
    # Use $JAVA_HOME
    JAVA="$JAVA_HOME/bin/java"
else
    # Use system default
    JAVA="java"
fi

# Escape
JAVA=$(printf %q "$JAVA")

#
# Settings.
#
# Properties file - by default we use the file at $HOME/.gaiasky/global.properties
#OPTS="$OPTS -Dproperties.file=$GSDIRESC/conf/global.properties"

# Memory
OPTS="$OPTS -Xms2g -Xmx4g"

# Parallel GC 
#OPTS="$OPTS -XX:+UseParallelGC"
# CMS GC, deprecated since Java9
#OPTS="$OPTS -XX:+UseConcMarkSweepGC"
# G1 GC
OPTS="$OPTS -XX:+UseG1GC"

# GC debug only
#OPTS="$OPTS -verbose:gc -XX:+PrintGCDetails"
# JIT compiler debug only
#OPTS="$OPTS -XX:+PrintCompilation"
# Even more JIT compiler debugging - This produces a huge XML log file (for JITWatch)
#OPTS="$OPTS -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly"

# macOS hack - needs a couple of args to be happy
if [[ "$OSTYPE" == "darwin"* ]]; then
	OPTS="$OPTS -XstartOnFirstThread -Djava.awt.headless=true"
fi

# Assets location
OPTS="$OPTS -Dassets.location=\"$GSDIR/\""

# SimpleLogger defaults 
OPTS="$OPTS -Dorg.slf4j.simpleLogger.defaultLogLevel=warn -Dorg.slf4j.simpleLogger.showThreadName=false"

#
# Run.
#

CMD="$JAVA $OPTS -cp \"$LIB_PATH\" gaia.cu9.ari.gaiaorbit.desktop.GaiaSkyDesktop $@"
# Uncomment to print run command
# echo "$CMD"

( cd "$GSDIR" && eval $CMD )
