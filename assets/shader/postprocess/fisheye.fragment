/*******************************************************************************
 * Copyright 2012 bmanuel
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
#version 330 core

uniform sampler2D u_texture0;
uniform vec2 u_viewport;

in vec2 v_texCoords;
layout (location = 0) out vec4 fragColor;

#define PI 3.1415926535
 
void main()
{
  float arx = min(1.0, u_viewport.y / u_viewport.x);
  float ary = min(1.0, u_viewport.x / u_viewport.y);

  vec2 uv;

  // tc in v_texCoords in [-1, 1]
  vec2 tc = v_texCoords * 2.0 - 1.0;
  vec2 arv = u_viewport.xy / min(u_viewport.x, u_viewport.y);
  vec2 xy = tc * arv;
  float d = length(xy);
  if (d < 1.0) {
    float z = sqrt(1.0 - d * d);
    float r = atan(d, z) / PI;
    float phi = atan(xy.y, xy.x);
    
    uv.x = (r * cos(phi) + 0.5) * arx + (1.0 - arx) / 2.0;
    uv.y = (r * sin(phi) + 0.5) * ary + (1.0 - ary) / 2.0;

    vec4 c = texture(u_texture0, uv);
  	fragColor = c;
  } else {
	fragColor = vec4(0.0, 0.0, 0.0, 1.0);
  }
  
}